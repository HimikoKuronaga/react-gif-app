{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAiBxC,OACC,0BAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAlBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,YCUVG,EAfK,SAAC,GAAoB,EAAnBC,GAAoB,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,IAChC,OACC,yBAAMC,UAAU,0CACf,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPMK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,iDACgCO,UAAUF,GAD1C,+DAGHG,MAAMR,GAHH,cAGhBS,EAHgB,gBAIDA,EAAKC,OAJJ,uBAIfC,EAJe,EAIfA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVd,kBAcfY,GAde,4CAAH,sDCuCLK,EAlCC,SAAC,GAAe,IAAdZ,EAAa,EAAbA,SAAa,ECFH,SAAEA,GAAc,IAAD,EAChBrB,mBAAS,CAClC2B,KAAM,GACNO,SAAS,IAHgC,mBACnCC,EADmC,KAC5BC,EAD4B,KAgB1C,OAVAC,qBAAU,WACTjB,EAAQC,GAAUiB,MAAK,SAAAC,GACtBH,EAAS,CACRT,KAAMY,EACNL,SAAS,SAGT,CAACb,IAGGc,EDZyBK,CAAanB,GAAhCU,EAFiB,EAEvBJ,KAAcO,EAFS,EAETA,QAErB,OACC,oCACC,wBACCjB,UAAU,qCACTI,GAGDa,GAAW,uBAAGjB,UAAU,mCAAb,WAGZ,yBAAKA,UAAU,aACXc,EAAOF,KACT,SAACC,GAAD,OACC,kBAAC,EAAD,eACAW,IAAKX,EAAIhB,IACLgB,UEAKY,EApBM,WAAM,IAAD,EACW1C,mBAAS,CAAC,cADrB,mBAClB2C,EADkB,KACN5C,EADM,KAGzB,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEC4C,EAAWd,KAAI,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACAoB,IAAKpB,EACLA,SAAUA,U,MCbfuB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.ed4c3f05.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\t\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = (e) =>{\n\t\tsetInputValue(e.target.value);\n\t}\n\n\tconst handleSubmit = (e) =>{\n\t\te.preventDefault();\n\t\t\n\t\tif(inputValue.trim().length > 2){\n\t\t\tsetCategories(cats => [inputValue, ...cats]);\n\t\t\tsetInputValue('');\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input \n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t</form>\t\n\n\t);\n}\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GifGridItem = ({id, title, url}) =>{\n\treturn (\n\t\t<div  className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n}\n\nGifGridItem.propTypes = {\n\tid: PropTypes.string.isRequired,\n\ttitle: PropTypes.string.isRequired,\n\turl: PropTypes.string.isRequired\n}\n\nexport default GifGridItem;\n","export const getGifs = async (category) =>{\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=PpXRCVgTLcr5PPhYZ3dIKjmBWeVYaL8D`;\n\n\tconst resp = await fetch(url);\n\tconst {data} = await resp.json();\n\n\tconst gifs = data.map(img => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url\n\t\t}\n\t});\n\t\n\treturn gifs;\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GifGridItem from './GifGridItem';\nimport {useFetchGifs} from './../hooks/useFetchGifs';\n\nconst GifGrid = ({category}) =>{\t\n\n\tconst {data: images, loading} = useFetchGifs(category);\n\n\treturn (\n\t\t<>\t\t\n\t\t\t<h3\n\t\t\t\tclassName=\"animate__animated animate__fadeIn\">\n\t\t\t\t{category}\n\t\t\t</h3>\n\n\t\t\t{loading && <p className=\"animate__animated animate_flash\">Loading</p>}\t\n\t\t\n\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t\t\t{images.map(\n\t\t\t\t\t(img)=>(\n\t\t\t\t\t\t<GifGridItem \n\t\t\t\t\t\tkey={img.id} \n\t\t\t\t\t\t{...img}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n\n}\n\nGifGrid.propTypes = {\n\tcategory: PropTypes.string.isRequired\n}\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\nimport { getGifs } from './../helpers/getGifs'; \n\nexport const useFetchGifs = ( category ) =>{\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t});\n\n\tuseEffect(()=>{\n\t\tgetGifs(category).then(imgs => {\n\t\t\tsetState({\n\t\t\t\tdata: imgs,\n\t\t\t\tloading: false\n\t\t\t});\t\n\t\t});\n\t}, [category]);\n\n\n\treturn state;\n}\n\n","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () =>{\n\tconst [categories, setCategories] = useState(['One Punch']);\n\n\treturn(\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr/>\n\t\t\t<ol>\t\n\t\t\t\t{\t\n\t\t\t\tcategories.map(category =>(\n\t\t\t\t\t<GifGrid\n\t\t\t\t\tkey={category}\n\t\t\t\t\tcategory={category} />))\n\t\t\t\t}\n\t\t\t</ol>\t\n\t\t</>\n\t);\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nReactDOM.render(<GifExpertApp />, document.getElementById('root')\n);\n"],"sourceRoot":""}